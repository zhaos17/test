<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC
        "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration>

    <!-- 加载数据库连接参数配置文件 -->
    <properties resource="jdbc.properties" />
    <!--&lt;!&ndash; mysql驱动路径 &ndash;&gt;-->
    <!--<classPathEntry location="E:\mysql-jdbc驱动\mysql-connector-java-5.1.45-bin.jar"/>-->

    <context id="context" targetRuntime="MyBatis3">
        <commentGenerator>
            <property name="suppressAllComments" value="false"/>
            <property name="suppressDate" value="true"/>
        </commentGenerator>

        <!-- 数据库配置 -->
        <jdbcConnection driverClass="${jdbc.driver}" connectionURL="${jdbc.url}"
                userId="${jdbc.username}" password="${jdbc.password}"/>

        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类
            targetPackage     指定生成的model生成所在的包名
            targetProject     指定在该项目下所在的路径
        -->
        <!-- !!!! Model Configurations !!!! -->
        <javaModelGenerator targetPackage="com.zhaos.entity" targetProject="src\main\java">
            <!-- 是否对model添加 构造函数 -->
            <property name="constructorBased" value="true"/>
            <!-- 是否允许子包，即targetPackage.schemaName.tableName -->
            <property name="enableSubPackages" value="false"/>
            <!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法
            <property name="immutable" value="true"/> -->
            <!-- 是否对类CHAR类型的列的数据进行trim操作 -->
            <property name="trimStrings" value="true"/>
            <!-- 给Model添加一个父类
            <property name="rootClass" value="com.foo.louis.Hello"/>
             -->
        </javaModelGenerator>

        <!-- sql mapper 映射配置文件 -->
        <sqlMapGenerator targetPackage="com.zhaos.dao" targetProject="src/main/resources">
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>

        <!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件的代码
                type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象
                type="MIXEDMAPPER",生成基于注解的Java Model 和相应的Mapper对象
                type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口
        -->
        <!-- !!!! Mapper Interface Configurations !!!! -->
        <javaClientGenerator targetPackage="com.zhaos.dao" targetProject="src/main/java" type="XMLMAPPER">
            <property name="enableSubPackages" value="false"/>
            <!--
                定义Maper.java 源代码中的ByExample() 方法的可视性，可选的值有：
                public;
                private;
                protected;
                default
                注意：如果 targetRuntime="MyBatis3",此参数被忽略\
                <property name="exampleMethodVisibility" value=""/>
             -->

            <!--
                  方法名计数器
                  Important note: this property is ignored if the target runtime is MyBatis3.
                  <property name="methodNameCalculator" value=""/>
             -->

            <!-- 为生成的接口添加父接口
            <property name="rootInterface" value=""/>-->
        </javaClientGenerator>

        <!-- 数据表进行生成操作 schema:相当于库名; tableName:表名; domainObjectName:对应的DO -->
        <!-- !!!! Table Configurations !!!! -->
        <table tableName="%" enableCountByExample="false" enableDeleteByExample="false" enableSelectByExample="false" enableUpdateByExample="false"/>
    </context>
</generatorConfiguration>